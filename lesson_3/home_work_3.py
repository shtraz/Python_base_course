"""
1. Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
Напишите два варианта решения: через list и через dict.

Пример:
Введите номер месяца: 10
Результат через список: Осень
Результат через словарь: Осень
"""

month = int(input("Введите номер месяца: "))
month_dict = {
    "Зима": (12, 1, 2),
    "Весна": (3, 4, 5),
    "Лето": (6, 7, 8),
    "Осень": (9, 10, 11)
}

for i in month_dict.keys():
    if month in month_dict[i]:
        print(i)

# Решение № 2
print("\nВторое решение:")
month_list = [i for i in range(1, 13)]  # Можно делать так что бы не тратить
# память? Или нужно было сделать список с временами года?
if month == month_list[-1] or month in month_list[:2]:
    print("Зима")
elif month in month_list[2:5]:
    print("Весна")
elif month in month_list[5:8]:
    print("Лето")
else:
    print("Осень")

"""
2. Пользователь вводит строку из нескольких слов,
разделённых пробелами. Вывести каждое слово с новой строки.
Строки необходимо пронумеровать. Если слово длинное,
выводить только первые 10 букв в слове.

Пример:
Введите слова через пробел: раз два три
1. раз
2. два
3. три

Введите слова через пробел: раз перерефрижерированность
1. раз
2. перерефриж
"""
# Скинули задание из 2-го урока.
my_words = input("\nВведите слова через пробел: ").split(' ')

for i in range(len(my_words)):
    print(f'{i + 1}. {my_words[i][:10]}')

"""
3. Реализовать структуру «Рейтинг», представляющую собой не
возрастающий набор натуральных чисел
(каждый элемент ряда меньше или равен предыдущему).

У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.

Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.

Набор натуральных чисел можно задать непосредственно в коде,
например, my_list = [7, 5, 3, 3, 2].
"""

from random import randint

len_raiting_list = int(input("Введите количество значений рейтинга: "))
my_list = [randint(1, 10) for i in range(len_raiting_list)]
print(f'Начальный список:       {my_list}')


def rating_sort(my_list):
    my_list.sort(reverse=True)
    return my_list


print(f'Отсортированный список: {rating_sort(my_list)}')


def update_rating_list(my_list):
    max_element = my_list[0]
    for i in range(len(my_list)):
        if my_list[i] > max_element: max_element = my_list[i]
    new_rating = int(input("Введите новой показатель рейтинга: "))
    if new_rating > max_element:
        my_list.insert(0, new_rating)
    elif new_rating in my_list:
        my_list.insert(my_list.index(new_rating), new_rating)
    else:
        my_list.append(new_rating)
        rating_sort(my_list)

    return my_list


i = 0
count_new_rating = int(input("Введите оличество новых показателей: "))
while i < count_new_rating:
    print(f'Обновленный список: {update_rating_list(my_list)}')
    i += 1

# Решение №2 (НЕ по условиям задачи)

# len_raiting_list = int(input("Введите количество значений рейтинга: "))
# my_list = [randint(1, 10) for i in range(len_raiting_list)]
#
# print(f'Начальный список:       {my_list}')
#
#
# def update_rating():
#     i = 0
#     while i < 3:
#         new_rating = int(input("Введите новой показатель рейтинга: "))
#         my_list.append(new_rating)
#         my_list.sort(reverse=True)
#         print(f'Обновленный список:       {my_list}')
#         i += 1
#     return my_list
#
#
# update_rating()

"""
4. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами
(характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]

Далее необходимо собрать аналитику о товарах. Реализовать словарь,
в котором каждый ключ — характеристика товара, например название,
а значение — список значений-характеристик, например список названий товаров.

Пример:

{
“названия”: [“компьютер”, “принтер”, “сканер”],
“цены”: [20000, 6000, 2000],
“количества”: [5, 2, 7],
“ед”: [“шт.”]
}
"""

product_list = []
count_product = int(input("Сколько новых товаров хотите добавить? "))

for i in range(count_product):
    product_id = int(input("Введите id товара: "))
    characteristics = {}
    count_characteristics = int(input("Введите количество характеристик: "))

    for i in range(count_characteristics):
        characteristics_key = input("Введите название характеристики: ")
        characteristics_value = input("Введите значение характеристики: ")
        characteristics[characteristics_key] = characteristics_value

    product_list.append(tuple([product_id, characteristics]))

print(product_list)

product_analytics = {}

for product in product_list:
    for key, value in product[1].items():
        if key in product_analytics:
            product_analytics[key].append(value)
        else:
            product_analytics[key] = [value]

for key, value in product_analytics.items():
    print(key, value)

"""
ДОПОЛНИТЕЛЬНЫЕ ЗАДАНИЯ:
1. Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.

*Пример:*

- [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12
Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.

Пример:

- [2, 3, 4, 5, 6] => [12, 15, 16];
- [2, 3, 5, 6] => [12, 15]
Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.

Пример:

- [1.1, 1.2, 3.1, 5, 10.01] => 0.19
Напишите программу, которая будет преобразовывать десятичное число в двоичное.

Пример:

- 45 -> 101101
- 3 -> 11
- 2 -> 10
Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.

Пример:

- для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] 
[Негафибоначчи](https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D0%B3%D0%B0%D1%84%D0%B8%D0%B1%D0%BE%D0%BD
%D0%B0%D1%87%D1%87%D0%B8#:~:text=%D0%92%20%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%
B5%2C%20%D1%87%D0%B8%D1%81%D0%BB%D0%B0%20%D0%BD%D0%B5%D0%B3%D0%B0%D1%84%D0%B8%D0%B1%D0%BE%D0%BD%D0%B
0%D1%87%D1%87%D0%B8%20%E2%80%94%20%D0%BE%D1%82%D1%80%D0%B8%D1%86%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD
%D0%BE%20%D0%B8%D0%BD%D0%B4%D0%B5%D0%BA%D1%81%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5%
20%D1%8D%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D1%8B%20%D0%BF%D0%BE%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B
2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8%20%D1%87%D0%B8%D1%81%D0%B5%D0%BB%20%D0
%A4%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8.)
"""
